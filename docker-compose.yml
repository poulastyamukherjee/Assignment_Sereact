version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: robot-backend
    ports:
      - "${BACKEND_PORT:-5000}:5000"  # Flask API
      - "${WEBSOCKET_PORT:-8765}:8765"  # WebSocket server
    volumes:
      - ./urdfpy:/app/urdfpy:ro  # Mount URDF files as read-only
      - ./robot_data:/app/robot_data:ro  # Mount robot data files as read-only
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-0}
      - PYTHONPATH=/app
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - robot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: robot-frontend
    ports:
      - "${FRONTEND_PORT:-80}:80"      # Nginx web server
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - robot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

networks:
  robot-network:
    driver: bridge
    name: robot-network

volumes:
  urdf-data:
    driver: local